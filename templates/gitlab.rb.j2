external_url 'https://{{ gitlab_access_url }}'

# Avoid running unnecessary services on the Gitaly server
postgresql['enable'] = false
redis['enable'] = false
nginx['enable'] = false
puma['enable'] = false
sidekiq['enable'] = false
gitlab_workhorse['enable'] = false
grafana['enable'] = false
gitlab_exporter['enable'] = false

# If you run a separate monitoring node you can disable these services
alertmanager['enable'] = false
prometheus['enable'] = false

# Prevent database connections during 'gitlab-ctl reconfigure'
gitlab_rails['rake_cache_clear'] = false
gitlab_rails['auto_migrate'] = false

# Configure the gitlab-shell API callback URL. Without this, `git push` will
# fail. This can be your 'front door' GitLab URL or an internal load
# balancer.
gitlab_rails['internal_api_url'] = 'https://{{ gitlab_access_url }}'

# Make Gitaly accept connections on all network interfaces. You must use
# firewalls to restrict access to this address/port.
# Comment out following line if you only want to support TLS connections
gitaly['listen_addr'] = "0.0.0.0:8075"
gitaly['auth_token'] = '{{ gitlab_token }}'

gitlab_shell['secret_token'] = '{{ gitlab_token }}'

git_data_dirs({
  'default' => {
    'path' => '{{ gitlab_gitaly_datadir }}'
  },
})

# Consolidated object storage configuration
gitlab_rails['object_store']['enabled'] = true
gitlab_rails['object_store']['proxy_download'] = true
gitlab_rails['object_store']['connection'] = {
    'provider' => 'AWS',
    'region' => '{{ aws_region }}',
    'use_iam_profile' => true
}

gitlab_rails['object_store']['objects']['artifacts']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-artifacts'
gitlab_rails['object_store']['objects']['external_diffs']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-external-diffs'
gitlab_rails['object_store']['objects']['lfs']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-lfs-objects'
gitlab_rails['object_store']['objects']['uploads']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-uploads'
gitlab_rails['object_store']['objects']['packages']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-packages'
gitlab_rails['object_store']['objects']['dependency_proxy']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-dependency-proxy'
gitlab_rails['object_store']['objects']['terraform_state']['bucket'] = '{{ gitlab_installation_prefix }}-gitlab-terraform-state'

# Backup related object storage configuration
gitlab_rails['backup_upload_connection'] = {
  'provider' => 'AWS',
  'region' => '{{ aws_region }}',
  'use_iam_profile' => true
}
gitlab_rails['backup_upload_remote_directory'] = '{{ gitlab_installation_prefix }}-gitlab-backup'
